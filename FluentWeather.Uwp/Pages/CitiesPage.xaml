<Page
    x:Class="FluentWeather.Uwp.Pages.CitiesPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:FluentWeather.Uwp.Behaviors"
    xmlns:controls="using:FluentWeather.Uwp.Controls"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dialogs="using:FluentWeather.Uwp.Controls.Dialogs"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:FluentWeather.Uwp.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:FluentWeather.Abstraction.Models"
    xmlns:vm="using:FluentWeather.Uwp.ViewModels"
    mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <AutoSuggestBox
            x:Name="SearchBox"
            x:Uid="SearchAutoSuggestBox"
            Margin="8,8,8,8"
            BorderBrush="{StaticResource AutoSuggestBoxBorderBrush}"
            ItemTemplate="{ThemeResource GeolocationSuggestTemplate}"
            IsTabStop="False"
            ItemsSource="{x:Bind ViewModel.SuggestedCities, Mode=OneWay}"
            QueryIcon="Find"
            Text="{x:Bind ViewModel.Query, Mode=TwoWay}"
            UpdateTextOnSelect="False">
            <AutoSuggestBox.Resources>
                <Style BasedOn="{StaticResource DefaultListViewItemStyle}" TargetType="ListViewItem" />
            </AutoSuggestBox.Resources>
            <i:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="QuerySubmitted">
                    <core:InvokeCommandAction Command="{x:Bind ViewModel.GetCitiesCommand}" CommandParameter="{x:Bind SearchBox.Text, Mode=OneWay}" />
                </core:EventTriggerBehavior>
                <core:EventTriggerBehavior EventName="SuggestionChosen">
                    <core:InvokeCommandAction Command="{x:Bind ViewModel.SaveCityCommand}" InputConverter="{StaticResource AutoSuggestSuggestionParameterConverter}" />
                </core:EventTriggerBehavior>
            </i:Interaction.Behaviors>
        </AutoSuggestBox>
        <ListView
            x:Name="CurrentCityView"
            Grid.Row="1"
            Margin="{ThemeResource CityViewMargin}">
            <controls:CityItem Location="{x:Bind ViewModel.CurrentCity, Mode=OneWay}" >
                <controls:CityItem.ContextFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem
                            x:Name="GetHistoricalWeatherItem"
                            x:Uid="GetHistoricalWeatherItem"
                            Click="GetHistoricalWeatherItem_Click"
                            Icon="Download" />
                        <MenuFlyoutItem
                                    x:Uid="PinSecondaryTilesItem"                                   
                                    Command="{x:Bind vm:CitiesPageViewModel.Instance.PinSecondaryTileCommand}"
                                    CommandParameter="{x:Bind ViewModel.CurrentCity}"
                                    Icon="Pin" />
                    </MenuFlyout>
                </controls:CityItem.ContextFlyout>
            </controls:CityItem>
        </ListView>
        <Border Grid.Row="1" Padding="{ThemeResource CityViewMargin}">
            <TextBlock
                Margin="12,12,16,12"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}">
                <Run
                    FontFamily="{StaticResource SymbolThemeFontFamily}"
                    FontSize="11"
                    Text="&#xE81B;" />
                <Run x:Uid="CurrentLocationText" />
            </TextBlock>

        </Border>

        <ListView
            x:Name="CitiesView"
            Grid.Row="2"
            Margin="{ThemeResource CityViewMargin}"
            AllowDrop="True"
            CanDragItems="True"
            CanReorderItems="True"
            ItemsSource="{x:Bind ViewModel.Cities, Mode=OneWay}">
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="models:GeolocationBase">
                    <controls:CityItem Location="{x:Bind}">
                        <controls:CityItem.ContextFlyout>
                            <MenuFlyout>
                                <MenuFlyoutItem
                                    x:Uid="DeleteMenuItem"
                                    Command="{x:Bind vm:CitiesPageViewModel.Instance.DeleteCityCommand}"
                                    CommandParameter="{x:Bind}"
                                    Icon="Delete" />
                                <MenuFlyoutItem
                                    x:Uid="PinSecondaryTilesItem"                                   
                                    Command="{x:Bind vm:CitiesPageViewModel.Instance.PinSecondaryTileCommand}"
                                    CommandParameter="{x:Bind}"
                                    Icon="Pin" />
                            </MenuFlyout>
                        </controls:CityItem.ContextFlyout>
                    </controls:CityItem>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <CommandBar
            Grid.Row="3"
            VerticalAlignment="Bottom"
            Background="Transparent"
            DefaultLabelPosition="Right">
            <AppBarButton x:Uid="TyphoonAppBarButton">
                <i:Interaction.Behaviors>
                    <behaviors:ButtonOpenContentDialogBehavior DialogType="dialogs:TyphoonDialog" />
                </i:Interaction.Behaviors>
            </AppBarButton>
            <AppBarButton
                x:Name="SettingsButton"
                x:Uid="SettingsAppBarButton"
                Click="SettingsButton_Click"
                Icon="Setting" />
            <AppBarButton x:Uid="AboutAppBarButton" >
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xE946;" />
                </AppBarButton.Icon>
                <i:Interaction.Behaviors>
                    <behaviors:ButtonOpenContentDialogBehavior DialogType="dialogs:AboutDialog" />
                </i:Interaction.Behaviors>
            </AppBarButton>
        </CommandBar>
    </Grid>
</Page>
